z=ztable
function _init()
    ta("{a=a,b=b}",                         z[[a:a;b:b;]])
    ta("{a=a,b=b}",                         z([[a:@;b:@;]], "a", "b"))
    ta("{a=a,b=b}",                         z([[a:@;b:@;c:@;]], "a", "b"))
    ta("{nf=[function],no=false,yes=true}", z[[yes:yes;no:no;null:null;nf:nf;]])
    ta("{a={b=a.b},b=b}",                   z[[a.b:a.b;b:b;]])
    ta("{a={b={c=a.b.c}}}",                 z[[a.b.c:a.b.c;]])
    ta("{a={b={c=a.b.c}}}",                 z[[a.b:a.b;.c:a.b.c;]])
    ta("{a={b=a.b,c=a.c}}",                 z[[a:;.b:a.b;.c:a.c;]])
    ta("{a={b=.b,c=.c},d={e=.e,f=.f}}",     z([[a:;.b:.b;.c:@;d:;.e:.e;.f:.f]], ".c"))
    ta("{{1,2,3}}",                         z[[.#:1;.#:2;.#:3;]])
    ta("{{1,2,3}}",                         z[[.#:1:2:3;]])
    ta("{1,2,3}",                           z[[#:1;#:2;#:3;]])
    ta("{1,2,3}",                           z[[#:1:2:3]])
    ta("{1,2,3}",                           z[[#;:1:2:3]])
    ta("{{1},{2},{3}}",                     z[[#.#:1;#.#:2;#.#:3;]])
    ta("{{1},{2},{3}}",                     z[[#.#:1:2:3;]])
    ta("{uno,dos}",                         z[[#:uno:dos;]])
    ta("{g={a,b,c}}",                       z[[g;.#:a:b:c;d]])
    ta("{a,b,c,d}",                         z[[:a:b:c:d;]])
    ta("{a,b,c,d}",                         z[[#:a:b:c:d;]])
    ta("{a,b,c,d}",                         z[[:a;:b;:c;:d;]])
    ta("{a,b,c,d}",                         z[[#:a;:b;:c;:d;]])
    ta("{a,b,c,d}",                         z[[#:a;#:b;#:c;#:d;]])
    print("all tests passed")
end

function ta(expected, actual)
    actual = tostring(actual)
    assert(expected == actual, "expect: "..expected.." | actual: "..actual)
end
